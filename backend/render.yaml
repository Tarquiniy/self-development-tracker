services:
  - type: web
    name: django-backend
    env: python
    plan: free
    region: frankfurt
    # Build: устанавливаем зависимости и собираем статику (мigrations не запускаем в build)
    buildCommand: >
      pip install --upgrade pip &&
      pip install -r requirements.txt &&
      ./build.sh
    # Start: на runtime ждём БД, применяем миграции (в loop), собираем статику и запускаем gunicorn
    startCommand: >
      bash -lc "
      set -e
      echo '--- Start command beginning ---'
      echo 'Using env: DJANGO_SETTINGS_MODULE='${DJANGO_SETTINGS_MODULE:-not_set}
      echo 'Using env: PYTHONPATH='${PYTHONPATH:-not_set}
      echo 'Using env: DATABASE_URL='${DATABASE_URL:-not_set}

      # Покажем, какой AUTH_USER_MODEL и DATABASES увидит Django (поможет отладить)
      python manage.py shell -c \"from django.conf import settings, pprint; import json; print('AUTH_USER_MODEL:', getattr(settings, 'AUTH_USER_MODEL', None)); pprint.pprint(settings.DATABASES)\" || true

      # Повторяем попытки миграций, пока БД не станет доступна (runtime)
      until python manage.py migrate --noinput --verbosity 1; do
        echo 'Waiting for DB to be ready (retrying migrate)...'
        sleep 3
      done

      # Собираем статику (безопасно повторять)
      python manage.py collectstatic --noinput

      # Автосоздание суперпользователя при наличии env-vars (опционально)
      if [ -n \"${DJANGO_SUPERUSER_USERNAME}\" ] && [ -n \"${DJANGO_SUPERUSER_EMAIL}\" ] && [ -n \"${DJANGO_SUPERUSER_PASSWORD}\" ]; then
        python manage.py shell -c \"from django.contrib.auth import get_user_model; import os; User=get_user_model(); u=os.environ.get('DJANGO_SUPERUSER_USERNAME'); e=os.environ.get('DJANGO_SUPERUSER_EMAIL'); p=os.environ.get('DJANGO_SUPERUSER_PASSWORD'); \
if not User.objects.filter(username=u).exists(): User.objects.create_superuser(u,e,p)\"
      fi

      echo '--- Starting gunicorn ---'
      exec gunicorn core.wsgi:application --bind 0.0.0.0:\$PORT --workers 3
      "
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: core.settings
      - key: PYTHONPATH
        value: /opt/render/project/src/backend
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: DATABASE_URL
        # Рекомендуется установить через Render Dashboard (здесь можно оставить пустым)
        value: ""
      - key: ALLOWED_HOSTS
        value: "sdracker.onrender.com"
      - key: SUPABASE_URL
        value: "https://fjqbhcmsqypevfbpzcxj.supabase.co"
      - key: SUPABASE_KEY
        value: "REDACTED_OR_YOUR_KEY"
      - key: FRONTEND_URL
        value: "https://positive-theta.vercel.app"
      - key: DJANGO_SUPERUSER_USERNAME
        value: ""
      - key: DJANGO_SUPERUSER_EMAIL
        value: ""
      - key: DJANGO_SUPERUSER_PASSWORD
        value: ""
